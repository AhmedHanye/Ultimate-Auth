services:
  traefik:
    image: traefik
    container_name: traefik
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=ahmedhanyehossny@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ultimate_auth_backend
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - .:/app
    command: >
      sh -c "
        python3 manage.py migrate --noinput &&
        gunicorn --bind 0.0.0.0:8000 ultimate_auth.wsgi:application
      "
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`http://localhost`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  db:
    image: postgres
    container_name: ultimate_auth_db
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    # ⚠️ No "ports:" here! Keep DB internal-only.

volumes:
  pgdata:
